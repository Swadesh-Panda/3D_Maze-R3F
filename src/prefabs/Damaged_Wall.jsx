/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { Suspense, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useBox } from '@react-three/cannon'

const Damaged_Wall = ({ ...props }) => {
  const { nodes, materials } = useGLTF('/models/Damaged_Wall.glb')
  
  const [cubeRef] = useBox(() => ({
    mass: 1,
    args: [8, 3, 0.5],
    material: {
      friction: 1,
      restitution: 0
    },
    ...props
  }));

  return (
    <Suspense fallback={null}>
      <group ref={cubeRef} {...props} dispose={null}>
        <group rotation={[-Math.PI / 2, 0, 0]} position={[0,-1.55,0]} scale={[0.04,0.02,0.04]}>
          <mesh castShadow receiveShadow geometry={nodes.Object_2.geometry} material={materials.Default_OBJ} />
        </group>
      </group>
    </Suspense>
  )
}

export default Damaged_Wall

useGLTF.preload('/models/Damaged_Wall.glb')
