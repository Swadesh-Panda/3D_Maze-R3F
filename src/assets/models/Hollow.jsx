/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { Suspense, useEffect, useRef } from 'react'
import { useAnimations, useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';

let current_state = "Idle";

export default function Hollow({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/Enemy.glb')
  const { actions, names, clips } = useAnimations(animations, group);
  
  /** Set Animation */
  useEffect(() => {
    // const newAction = actions[props.action];
    // const oldAction = actions[current_state];

    // newAction.reset();

    // newAction.play();
    // newAction.crossFadeFrom(oldAction, 0.2);

    // current_state = props.action;
  }, [actions, props.action]);

  return (
    <Suspense fallback={null}>
      <group ref={group} {...props} dispose={null}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name='enemy' geometry={nodes.Body.geometry} material={materials['lambert3SG.004']} skeleton={nodes.Body.skeleton} />
          <skinnedMesh geometry={nodes.Head.geometry} material={materials['lambert2SG.003']} skeleton={nodes.Head.skeleton} />
        </group>
      </group>
    </Suspense>
  )
}

useGLTF.preload('/models/Enemy.glb')
